<?xml version="1.0"?>

<configuration>
  
  <!-- set up the razor configuration sections below -->
  <configSections>
    <sectionGroup name="system.web.webPages.razor" type="System.Web.WebPages.Razor.Configuration.RazorWebSectionGroup, System.Web.WebPages.Razor, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
      <section name="host" type="System.Web.WebPages.Razor.Configuration.HostSection, System.Web.WebPages.Razor, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" />
      <section name="pages" type="System.Web.WebPages.Razor.Configuration.RazorPagesSection, System.Web.WebPages.Razor, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" />
    </sectionGroup>
  </configSections>

  <!-- razor configuration sections-->
  <system.web.webPages.razor>

    <!-- turn on the razor view engine -->
    <host factoryType="System.Web.Mvc.MvcWebRazorHostFactory, System.Web.Mvc, Version=5.2.3.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />

    <!-- base class for views -->
    <pages pageBaseType="System.Web.Mvc.WebViewPage">

      <!-- namespaces that should be automatically avaliable to views -->
      <namespaces>
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />

        <!-- our application namespace -->
        <add namespace="MvcTheHardWay" />

      </namespaces>
    </pages>
  </system.web.webPages.razor>

  <!-- 	
		enable/disable the basic WebPages framework (*.cshtml files) for this folder. 
		
		WebPages are a distinct technology from MVC and enabling it will allow execution of the file when accessed directly 
		(via the WebPageHttpHandler and not via controller routing and the view page engine). 
  
		enabling web pages will allow the web page to be served directly, and the MVC view engine will not be used. the web page 
		should inherit from System.Web.WebPages.WebPage in this case.
		
		if disabled (which it should be for MVC) the web page is not processed by the basic WebPages framework and handled by
		MVC instead. in this case, the file exists so there is nothing to route and the request is given to IIS, where it
		matches against the BlockViewHandler defined below and you'll get the 404. 
  -->
  <appSettings>
    <add key="webpages:Enabled" value="false" />
  </appSettings>

  <!-- 
		don't allow any files to be served directly from this folder (including views) 
		
		note: even if you remove this, chances are there is a "HttpForbiddenHandler" installed to prevent *.cshtml files
		from being served (that is, the actual source). so if you disable the WebPages framework and remove this the file
		will still be blocked.
  -->
  <system.webServer>
    <handlers>
      <remove name="BlockViewHandler"/>
      <add name="BlockViewHandler" path="*" verb="*" preCondition="integratedMode" type="System.Web.HttpNotFoundHandler" />
    </handlers>
  </system.webServer>

</configuration>
